function [layerSet, trainPrefs] = nn_build_network(trainTestSetInfo)

global REMORA

trainFileObj = matfile(REMORA.nn.train_net.trainFile);
testFileObj = matfile(REMORA.nn.train_net.testFile);
if REMORA.nn.train_test_set.validationTF 
    validFileObj = matfile(REMORA.nn.train_net.validFile);
end
% Sanity check that train and test data have same dimensions.
trainDataSize = size(trainFileObj.trainDataAll);%[size(trainFileObj.trainDataAll,1),492];%size(trainFileObj.trainDataAll);%figure out dims of training data.
testDataSize =  size(testFileObj.testDataAll);%[size(testFileObj.testDataAll,1),492];%figure out dims of training data.
numClasses = length(unique(trainFileObj.trainLabelsAll));
if trainDataSize(2) ~= testDataSize(2)
    error('Dimensions of training and test sets do not match.')
end

layerSet = featureInputLayer(trainDataSize(2),'normalization', 'none');

for iD = 1:REMORA.nn.train_net.nHiddenLayers
    layerSet = [layerSet;...
    fullyConnectedLayer(REMORA.nn.train_net.hLayerSize);...
    leakyReluLayer;...
    dropoutLayer(REMORA.nn.train_net.dropout/100)];

end

layerSet = [layerSet;...
	fullyConnectedLayer(numClasses);...
	softmaxLayer];
% weightedClassificationLayer(REMORA.nn.train_net.labelWeights')];
if REMORA.nn.train_test_set.validationTF
    % validation data provided
    REMORA.nn.train_net.validationFreq = floor(trainDataSize(1)/REMORA.nn.train_net.batchSize);
    if REMORA.nn.train_net.validationFreq <1
        error(sprintf('Batch size (%0.0f) is too large relative to training set size (%0.0f). Reduce batch size',REMORA.nn.train_net.batchSize,trainDataSize(1)))
    end
    vD = load(REMORA.nn.train_net.validFile);
    %vD.validDataAll(:,191+200+1:(191+200+96+100)) = [];
    validData = vD.validDataAll;
    if trainTestSetInfo.standardizeAll
        [validData,~] = nn_fn_standardize_data(trainTestSetInfo,validData, 0);
    end
    % vD.validDataAll = min(abs(validData),1);

    % validation4D = table(mat2cell(vD.validDataAll,...
    %     ones(size(vD.validDataAll,1),1)),categorical(vD.validLabelsAll));

    trainPrefs = trainingOptions('sgdm',...
        'MaxEpochs',REMORA.nn.train_net.nEpochs, ...
        'Metrics',["accuracy","recall"], ...
        'MiniBatchSize',REMORA.nn.train_net.batchSize, ...
        'ValidationFrequency',REMORA.nn.train_net.validationFreq,...
        'ValidationData',{vD.validDataAll,categorical(vD.validLabelsAll)},...
        'ValidationPatience',3,...
        'OutputNetwork','best-validation',...
        'Shuffle','every-epoch', ...
        'LearnRateSchedule','piecewise',...
        'Plots','training-progress');%'InitialLearnRate',0.0003,...
else
    trainPrefs = trainingOptions('rmsprop',...
        'MaxEpochs',REMORA.nn.train_net.nEpochs, ...
        'MiniBatchSize',REMORA.nn.train_net.batchSize, ...
        'Shuffle','every-epoch', ...
        'Plots','training-progress');%'InitialLearnRate',0.0003,...
end
